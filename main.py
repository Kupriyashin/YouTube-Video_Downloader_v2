import os
import traceback
import re

from PyQt5.QtCore import QThread, pyqtSignal
from PyQt5.QtGui import QIcon, QPixmap
from loguru import logger
from datetime import datetime
from PyQt5.QtWidgets import QApplication, QFileDialog
from PyQt5 import QtWidgets
import sys

from Form import Ui_MainWindow
from WorkingWithVideos import WorkingWithVideos
from UploadingAVideo import UploadingAVideo
from KitajskyKostil import VisualizationStub

"""
–õ—É—á—à–µ —Å–¥–µ–ª–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω —Ñ–∞–π–ª —Å –∫–ª–∞—Å—Å–æ–º –ø–æ–¥ –µ—â–µ 1 –ø–æ—Ç–æ–∫!
–ü—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—ã–∑–æ–≤–µ –ø–æ—Ç–æ–∫–∞ –ª—É—á—à–µ —è–≤–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –≤—ã—Ö–æ–¥ –∏–∑ –Ω–µ–≥–æ (—Ç–æ –µ—Å—Ç—å –∏—Å–ø—É—Å–∫–∞—Ç—å –∏–∑ –Ω–µ–≥–æ —Å–∏–≥–Ω–∞–ª –∏ –ø–æ –¥–∞–Ω–Ω–æ–º—É —Å–∏–≥–Ω–∞–ª—É –µ–≥–æ –∑–∞–∫—Ä—ã–≤–∞—Ç—å)
–ê —Ç–æ —á–µ —Ç–æ –æ–Ω –∫–æ–≥–¥–∞ —Ö–æ—á–µ—Ç –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è, –∫–∞–∫ —Ç–æ —Å—Ç—Ä–∞–Ω–Ω–æ
"""

"""
–ö–æ–º–ø–∏–ª—è—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –≤–∏–¥–µ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞ - https://habr.com/ru/companies/vdsina/articles/557316/

–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ uic -> py: pyuic5 Form/form_downloader.ui -o Form/Form_downloader.py

–ö–∞–∫ —É–¥–∞–ª–∏—Ç—å commit –≤ Github:
1. –ü–æ–ª—É—á–∞–µ–º —Ö—ç—à-–∫–æ–¥ –∫–æ–º–º–∏—Ç–∞, –∫ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏–º –≤–µ—Ä–Ω—É—Ç—å—Å—è.
2. –ó–∞—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∏ –ø–∏—à–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å:
    $ git reset --hard <—Ö—ç—à-–∫–æ–¥ –∫–æ–º–º–∏—Ç–∞> 
    $ git push --force
    
—Å–æ–∑–¥–∞–Ω–∏–µ requirements —Ñ–∞–π–ª–∞: pip3 freeze > requirements.txt

–ú–∞–Ω–∞–ª —è —ç—Ç—É –±–∏–±–ª–∏–æ—Ç–µ–∫—É pytube: –∫–∞–∫ –æ–∫–∞–∑–∞–ª–æ—Å—å –æ–Ω–∞ –Ω–µ —Å–ø–æ—Å–æ–±–Ω–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –¥–∞–≤–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∫–∞—á–∞–Ω–Ω–æ–≥–æ –∏ —Å–∫–∞—á–∏–≤–∞—Ç—å –≤–∏–¥–µ–æ (–ª–∏–±–æ —É –º–µ–Ω—è —Ä—É–∫–∏ –∫—Ä–∏–≤—ã–µ –ª–∏–±–æ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ç–∞–∫),
–≤–≤–∏–¥—É —á–µ–≥–æ –±—ã–ª–æ –ø—Ä–∏–¥—É–º–∞–Ω–æ —Ä–µ—à–µ–Ω–∏–µ —Å–¥–µ–ª–∞—Ç—å "–ö–∏—Ç–∞–π—Å–∫–∏–π –∫–æ—Å—Ç—ã–ª—å" - —ç—Ç–æ, –≤—ã–ø–æ–ª–Ω—è–µ–º—ã–π —Ü–∏–∫–ª –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä–∞.
–í–≤–∏–¥—É —Ç–æ–≥–æ, —á—Ç–æ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞, —Ö–æ—Ç—å –∏ –Ω–µ —É–º–µ—Ä–∞–µ—Ç, –Ω–æ –∏ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç, —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Å–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –µ–µ –ø—Ä–æ—Å—Ç–æ –≤—ã—Ä—É–±–∏—Ç—å, –ø–æ–¥–ª—É–º–∞–≤, —á—Ç–æ –æ–Ω–∞ –∑–∞–≤–∏—Å–ª–∞.
–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä –º–æ–∂–µ—Ç —á–∞—Å—Ç–∏—á–Ω–æ —Ä–µ—à–∏—Ç—å –¥–∞–Ω–Ω—É—é –ø—Ä–æ–±–ª–µ–º—É.
"""

logger.add("debug.log", format="{time} {level} {message}", level="DEBUG")


class MainWindow(QtWidgets.QMainWindow, Ui_MainWindow):
    _signal_stop_random = pyqtSignal(int)

    def __init__(self):
        super().__init__()

        self._name_video = None
        self._working_with_videos_class = None
        self._additional_stream_class = None
        self._download_video_class_thread = None
        self._stream = None
        self._progressive_false = None
        self._video = None
        self._audio = None

        self.__url_video = None
        self.__YouTube_object = None
        self.__streams = None
        self.__path_saved = None

        self._thread_video_information = None

        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)

        self.setWindowTitle("Video YouTube Downloader")
        self.setWindowIcon(QIcon("Resources/folderreddownload_93315.ico"))

        self.ui.label.setPixmap(QPixmap(r"Title Image/error_image.jpg"))

        self.ui.listWidget.setWordWrap(True)
        self.ui.textEdit.setReadOnly(True)
        self.ui.textEdit.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")

        self.ui.pushButton.clicked.connect(self.getting_information_about_the_video)
        self.ui.pushButton_3.clicked.connect(lambda: self.path_saved_video())
        self.ui.pushButton_2.clicked.connect(lambda: self.video_and_audio_download())

        self.ui.comboBox.setEnabled(False)
        self.ui.pushButton_3.setEnabled(False)
        self.ui.pushButton_2.setEnabled(False)

    @logger.catch()
    def video_and_audio_download(self):
        try:
            self.ui.pushButton_2.setEnabled(False)
            self._stream = self.ui.comboBox.currentText().split(': ')[-1]
            logger.info(self._stream)

            for item in self.__streams:
                if self._stream in str(item[-1]):
                    self.__streams = item
                    break

            logger.info("__________________–û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–µ –æ–±—ä–µ–∫—Ç—ã –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è__________________")
            logger.info(f"–û–±—ä–µ–∫—Ç –ø—É—Ç–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {self.__path_saved}")  # –ø—É—Å—Ç—å
            logger.info(f"–û–±—ä–µ–∫—Ç –Æ—Ç—É–±–∞: {self.__YouTube_object}")  # –æ–±—ä–µ–∫—Ç —é—Ç—É–±–∞
            logger.info(f"–û–±—ä–µ–∫—Ç –∞—É–¥–∏–æ: {self._audio}")  # –∞—É–¥–∏–æ —Å—Ç—Ä–∏–º
            logger.info(f"–û–±—ä–µ–∫—Ç –≤–∏–¥–µ–æ: {self.__streams}")  # –≤–∏–¥–µ–æ —Å—Ç—Ä–∏–º
            logger.info(f"–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ: {self._name_video}")

            logger.info(f"–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö –ø—É—Ç–∏: {type(self.__path_saved)}")  # —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç—å
            logger.info(f"–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞ —é—Ç—É–±: {type(self.__YouTube_object)}")  # —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç —é—Ç—É–±–∞
            logger.info(f"–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö –∞—É–¥–∏–æ: {type(self._audio)}")  # —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –∞—É–¥–∏–æ —Å—Ç—Ä–∏–º
            logger.info(f"–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ: {type(self.__streams)}")  # —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ —Å—Ç—Ä–∏–º

            # ___________________________________________–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ –≤ –¥—Ä—É–≥–æ–º –ø–æ—Ç–æ–∫–µ___________________________________________

            # —Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ —Å –Ω—É–∂–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
            self._download_class = UploadingAVideo(path_saved=self.__path_saved, youtube_object=self.__YouTube_object,
                                                   audio_object=self._audio, video_object=self.__streams,
                                                   name_video=self._name_video)

            # –∫–ª–∞—Å—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –∏ –ø–æ–º–µ—â–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ –≤ –ø–æ—Ç–æ–∫
            self._download_new_thread = QThread()  # –ø–æ—Ç–æ–∫
            self._download_class.moveToThread(self._download_new_thread)

            # –Ω–∞—á–∞–ª–æ –ø–æ—Ç–æ–∫–∞
            self._download_new_thread.started.connect(self._download_class.uploading_a_video)
            self._download_new_thread.started.connect(lambda: self.ui.progressBar.setValue(0))

            self._download_new_thread.started.connect(
                lambda: self.logging_of_information(text="–ù–∞—á–∞–ª –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ", true_false=True)
            )

            # —Ä–∞–±–æ—á–∏–µ —Å–∏–≥–Ω–∞–ª—ã
            self._download_class._signal_error.connect(
                lambda text: self.logging_of_information(text=text, true_false=False))

            self._download_class._signal_error.connect(
                lambda: self.finished_download_video())

            self._download_class._signal_progress_downloaded.connect(lambda text: self.logging_of_information(text=text, true_false=True))

            # –∫–æ–Ω–µ—Ü –ø–æ—Ç–æ–∫–∞
            self._download_class._signal_all_finished.connect(self._download_new_thread.quit)

            self._download_new_thread.finished.connect(
                lambda: self.logging_of_information(text="Download completed successfully!üòé", true_false=True))

            self._download_new_thread.finished.connect(lambda: self.ui.progressBar.setValue(100))

            self._download_new_thread.finished.connect(lambda: self.finished_download_video())
            self._download_new_thread.finished.connect(lambda: self._signal_stop_random.emit(1))

            # –∑–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–∞
            self._download_new_thread.start()

            # ___________________________________________–ö–æ–Ω–µ—Ü —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ –≤ –¥—Ä—É–≥–æ–º –ø–æ—Ç–æ–∫–µ___________________________________________

            # _____________________________________–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∫–∞—á–∏–≤–Ω–∞–∏—è –≤ –¥—Ä—É–≥–æ–º –ø–æ—Ç–æ–∫–µ___________________________________

            self._stub_visualization_stream = QThread()
            self._visualization_stub_class = VisualizationStub(parent_window=self)

            # –∑–∞–∫–∏–¥—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ –¥—Ä—É–≥–æ–π –ø–æ—Ç–æ–∫
            self._visualization_stub_class.moveToThread(self._stub_visualization_stream)

            # —Å—Ç–∞—Ä—Ç –ø–æ—Ç–æ–∫–∞
            self._stub_visualization_stream.started.connect(self._visualization_stub_class.visualization_stub_func)

            # —Ä–∞–±–æ—á–∏–µ —Å–∏–≥–Ω–∞–ª—ã
            self._visualization_stub_class._signal_random_value.connect(lambda val: self.ui.progressBar.setValue(val))

            self._visualization_stub_class._signal_random_data.connect(
                lambda text: self.logging_of_information(text=text, true_false=True))

            # –∫–æ–Ω–µ—Ü –ø–æ—Ç–æ–∫–∞
            self._visualization_stub_class._signal_finished.connect(self._stub_visualization_stream.quit)

            # –ó–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–∞
            self._stub_visualization_stream.start()


        except Exception:

            self.logging_of_information(text="‚ùå‚ùå‚ùå–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É!‚ùå‚ùå‚ùå", true_false=False)
            logger.error(traceback.format_exc())

            self.ui.label.setPixmap(QPixmap("Title Image/error_image.jpg"))

            self.ui.textEdit.clear()
            self.ui.textEdit.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")

            self.ui.lineEdit.setEnabled(True)
            self.ui.pushButton.setEnabled(True)

            self.ui.label_4.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            self.ui.label_4.setStyleSheet("color: red;")
            self.ui.label_6.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            self.ui.label_6.setStyleSheet("color: red;")
            self.ui.label_10.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            self.ui.label_10.setStyleSheet("color: red;")
            self.ui.label_12.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            self.ui.label_12.setStyleSheet("color: red;")
            self.ui.label_15.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            self.ui.label_15.setStyleSheet("color: red;")
            self.ui.comboBox.clear()

    @logger.catch()
    def path_saved_video(self):
        try:
            _path_directory = QFileDialog.getExistingDirectory(self, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ')

            if _path_directory:
                self.__path_saved = _path_directory

                self.logging_of_information(text=f"–ü–∞–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {self.__path_saved}", true_false=True)
                self.logging_of_information(text=f"–í–´ –ú–û–ñ–ï–¢–ï –°–ö–ê–ß–ê–¢–¨ –í–ò–î–ï–û –í –í–´–ë–†–ê–ù–ù–û–ú –ö–ê–ß–ï–°–¢–í–ï", true_false=True)
                logger.info(f"–ü—É—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ: {self.__path_saved}")

                self.ui.comboBox.setEnabled(False)
                self.ui.pushButton_3.setEnabled(False)
                self.ui.pushButton_2.setEnabled(True)

            else:

                self.logging_of_information(text="–ü–∞–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ –≤—ã–±—Ä–∞–Ω–∞", true_false=False)

        except Exception:

            self.logging_of_information(text="‚ùå‚ùå‚ùå–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É!‚ùå‚ùå‚ùå", true_false=False)
            logger.error(traceback.format_exc())

            self.ui.label.setPixmap(QPixmap("Title Image/error_image.jpg"))

            self.ui.textEdit.clear()
            self.ui.textEdit.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")

            self.ui.lineEdit.setEnabled(True)
            self.ui.pushButton.setEnabled(True)

            self.ui.label_4.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            self.ui.label_4.setStyleSheet("color: red;")
            self.ui.label_6.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            self.ui.label_6.setStyleSheet("color: red;")
            self.ui.label_10.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            self.ui.label_10.setStyleSheet("color: red;")
            self.ui.label_12.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            self.ui.label_12.setStyleSheet("color: red;")
            self.ui.label_15.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            self.ui.label_15.setStyleSheet("color: red;")
            self.ui.comboBox.clear()

    @logger.catch()
    def logging_of_information(self, text: str, true_false: bool):
        """
        –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ–π—Å—Ç–≤–∏–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ listWidget'–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        :param text:
        :param true_false:
        :return:
        """
        try:
            if true_false:
                self.ui.listWidget.addItem(f"‚úÖ{datetime.now().strftime('%H:%M:%S')} - {text}")
                self.ui.listWidget.scrollToBottom()

            else:
                self.ui.listWidget.addItem(f"‚ùå{datetime.now().strftime('%H:%M:%S')} - {text}")
                self.ui.listWidget.scrollToBottom()

        except Exception:
            self.ui.listWidget.addItem(
                f"‚ùå{datetime.now().strftime('%H:%M:%S')} - –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏")
            self.ui.listWidget.addItem(
                f"‚ùå{datetime.now().strftime('%H:%M:%S')} - ‚ùå–ü–ï–†–ï–ó–ê–ì–†–£–ó–ò–¢–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–ï!‚ùå")
            self.ui.listWidget.scrollToBottom()

    def getting_information_about_the_video(self):
        """
        –§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ.
        –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç: —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ ListWidget —Ä–µ–≥—É–ª—è—Ä–Ω–æ–º—É –≤—ã—Ä–∞–∂–µ–Ω–∏—é
        :return:
        """
        if re.fullmatch(r"^(http(s)?:\/\/)?((w){3}.)?youtu(be|.be)?(\.com)?\/.+", self.ui.lineEdit.text()):

            self.logging_of_information(text="–£–∫–∞–∑–∞–Ω–∞ –≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ", true_false=True)

            self.__url_video = self.ui.lineEdit.text()

            self.ui.lineEdit.setEnabled(False)
            self.ui.pushButton.setEnabled(False)

            logger.info(f"–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ: {self.__url_video}")

            self.getting_information_in_a_separate_stream()

        else:
            self.logging_of_information(text="–£–∫–∞–∑–∞–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ", true_false=False)

    @logger.catch()
    def getting_information_in_a_separate_stream(self):
        """
        –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ –≤ –∫–ª–∞—Å—Å–µ - WorkingWithVideos (from Working_with_videos import WorkingWithVideos)
        :return:
        """
        try:
            # –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ
            self._thread_video_information = WorkingWithVideos(url=self.__url_video)

            # –∫–ª–∞—Å—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –∏ –ø–æ–º–µ—â–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ –≤ –ø–æ—Ç–æ–∫
            self._additional_stream_class = QThread()
            self._thread_video_information.moveToThread(self._additional_stream_class)

            # –Ω–∞—á–∞–ª–æ –ø–æ—Ç–æ–∫–∞
            self._additional_stream_class.started.connect(self._thread_video_information.get_information)

            self._additional_stream_class.started.connect(
                lambda: self.logging_of_information(text="–ù–∞—á–∞–ª –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ–º—Ä–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ", true_false=True))

            self._additional_stream_class.started.connect(
                lambda: self.ui.progressBar.setValue(0))

            # —Ä–∞–±–æ—á–∏–µ —Å–∏–≥–Ω–∞–ª—ã
            self._thread_video_information._signal_error.connect(
                lambda text: self.logging_of_information(text=text, true_false=False))

            self._thread_video_information._signal_error_crit.connect(lambda: self.error_crit())

            self._thread_video_information._signal_streams_true.connect(
                lambda text: self.logging_of_information(text=text, true_false=True))

            self._thread_video_information._signal_progress.connect(lambda num: self.ui.progressBar.setValue(num))

            self._thread_video_information._signal_author.connect(
                lambda text: self.author_add(text))

            self._thread_video_information._signal_information_text_true.connect(
                lambda text: self.logging_of_information(text=text, true_false=True))

            self._thread_video_information._signal_title.connect(lambda text: self.title_add(text))

            self._thread_video_information._signal_keywords_video.connect(lambda text: self.keywords_add(text))

            self._thread_video_information._signal_views.connect(lambda text: self.views_add(text))

            self._thread_video_information._signal_length.connect(lambda text: self.length_add(text))

            self._thread_video_information._signal_description.connect(lambda text: self.description_add(text))

            self._thread_video_information._signal_title_image.connect(lambda text: self.image_title_add(text))

            self._thread_video_information._completely_finished_the_work.connect(
                lambda objects: self.working_with_youtube_objects(objects))

            # –∫–æ–Ω–µ—Ü –ø–æ—Ç–æ–∫–∞

            self._thread_video_information._completely_finished_the_work.connect(self._additional_stream_class.quit)

            self._additional_stream_class.finished.connect(
                lambda: self.logging_of_information(text="–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–∫–æ–Ω—á–µ–Ω–æ", true_false=True))

            self._additional_stream_class.finished.connect(
                lambda: self.ui.progressBar.setValue(100))

            # –∑–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–∞
            self._additional_stream_class.start()

        except Exception:
            logger.error(traceback.format_exc())
            self.logging_of_information(text="–û—à–∏–±–∫–∞ –≤ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ", true_false=False)

            self.ui.lineEdit.setEnabled(True)
            self.ui.pushButton.setEnabled(True)

    @logger.catch()
    def error_crit(self):
        self.ui.pushButton.setEnabled(True)
        self.ui.lineEdit.setEnabled(True)

    @logger.catch()
    def working_with_youtube_objects(self, objects: dict):
        try:
            self.__YouTube_object = objects.get("object_youtube")
            self.__streams = list(enumerate(objects.get("stream_object")))

            logger.info(f"object_youtube: {self.__YouTube_object}")
            logger.info(f"stream_object: {self.__streams}")

            self._progressive_false = []
            self._video = []
            self._audio = []

            # –ø–æ–ª—É—á–∞—é —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–∏–º—ã —Å —Ä–∞–∑–¥–µ–ª—å–Ω—ã–º –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ
            for stream in self.__streams:
                if "False" in str(stream[1]):
                    self._progressive_false.append(stream)

            # –ø–æ–ª—É—á–∞—é —Å—Ç—Ä–∏–º—ã —Ç–æ–ª—å–∫–æ —Å –≤–∏–¥–µ–æ–∫–æ–¥–µ–∫–æ–º vp9
            for video in self._progressive_false:
                if "vp9" in str(video[1]):
                    self._video.append(video)
                    item = str(video).split(' ')[2].split('"') + str(video).split(' ')[4].split('"')
                    item = f"{item[4]} - –¢–µ–≥: {item[1]}"
                    logger.info(f"Item –≤ –∫–æ–º–±–æ–±–æ–∫—Å: {item}")
                    self.ui.comboBox.addItem(item)
                    self.logging_of_information(text=f"–ú–æ–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å {item}", true_false=True)

            # –ø–æ–ª—É—á–∞—é –∞—É–¥–∏–æ —Ç–æ–ª—å–∫–æ —Å –∞—É–¥–∏–æ–∫–æ–¥–µ–∫–æ–º opus
            for audio in self._progressive_false:
                if "opus" in str(audio[1]):
                    self._audio.append(audio)

            # –±–µ—Ä—É —Å–∞–º—ã–π —Ç—è–∂–µ–ª—ã–π –ø–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é —Å—Ç—Ä–∏–º –∞—É–¥–∏–æ
            self._audio = self._audio[-1]

            self.ui.comboBox.setEnabled(True)
            if self.__path_saved:
                self.ui.pushButton_3.setEnabled(True)
                self.ui.pushButton_2.setEnabled(True)
            else:
                self.ui.pushButton_3.setEnabled(True)

            logger.info(self._progressive_false)
            logger.info(self._video)
            logger.info(self._audio)

        except Exception:
            self.logging_of_information(text="‚ùå‚ùå‚ùå–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É!‚ùå‚ùå‚ùå", true_false=False)
            logger.error(traceback.format_exc())

            self.ui.label.setPixmap(QPixmap("Title Image/error_image.jpg"))

            self.ui.textEdit.clear()
            self.ui.textEdit.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")

            self.ui.lineEdit.setEnabled(True)
            self.ui.pushButton.setEnabled(True)

            self.ui.label_4.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            self.ui.label_4.setStyleSheet("color: red;")
            self.ui.label_6.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            self.ui.label_6.setStyleSheet("color: red;")
            self.ui.label_10.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            self.ui.label_10.setStyleSheet("color: red;")
            self.ui.label_12.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            self.ui.label_12.setStyleSheet("color: red;")
            self.ui.label_15.setText("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            self.ui.label_15.setStyleSheet("color: red;")

    # ___________________________ –ú–µ—Ç–æ–¥—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–æ—Å–µ –≤ –ø–æ–ª—è—Ö ___________________________
    @logger.catch()
    def image_title_add(self, path: str):
        try:
            self.ui.label.setPixmap(QPixmap(path))
            os.remove(path)

        except Exception:
            self.logging_of_information(text="–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–∏—Ç—É–ª—å–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∏–¥–µ–æ", true_false=False)

    @logger.catch()
    def description_add(self, description: str):
        try:
            self.ui.textEdit.clear()
            self.ui.textEdit.setText(description)
            logger.info(f"–û–ø–∏—Å–∞–Ω–∏–µ –≤–∏–¥–æ: {description}")

        except Exception:
            self.logging_of_information(text="–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è –≤–∏–¥–µ–æ", true_false=False)

    @logger.catch()
    def length_add(self, length: str):
        try:
            self.ui.label_15.setText(length)
            self.ui.label_15.setStyleSheet("color: green;")

            logger.info(f"–î–ª–∏–Ω–∞ –≤–∏–¥–µ–æ: {length}")
        except Exception:
            self.logging_of_information(text="–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–ª–∏–Ω—ã –≤–∏–¥–µ–æ", true_false=False)

    @logger.catch()
    def views_add(self, views: str):
        try:
            self.ui.label_12.setText("{0:,}".format(int(views)).replace(",", " "))
            self.ui.label_12.setStyleSheet("color: green;")

            logger.info(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {views}")
        except Exception:
            self.logging_of_information(text="–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –≤–∏–¥–µ–æ", true_false=False)

    @logger.catch()
    def keywords_add(self, keywords: str):
        try:
            _length_symbol = 71
            _words = ''

            if len(keywords.lower()) > _length_symbol:
                _words = ''.join(keywords[:71]) + " ..."
            else:
                _words = keywords

            self.ui.label_10.setText(_words)
            self.ui.label_10.setStyleSheet("color: green;")

            logger.info(f"–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤–∏–¥–µ–æ: {_words}")
        except Exception:
            self.logging_of_information(text="–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤–∏–¥–µ–æ", true_false=False)

    @logger.catch()
    def title_add(self, title: str):
        try:
            self._name_video = title
            _length_symbol = 71
            _words = ''
            if len(title.lower()) > _length_symbol:
                _words = ''.join(title.lower()[:71]) + " ..."
            else:
                _words = title

            self.ui.label_6.setText(_words.capitalize())
            self.ui.label_6.setStyleSheet("color: green;")

            logger.info(f"–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ: {_words}")
        except Exception:
            self.logging_of_information(text="–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ", true_false=False)

    @logger.catch()
    def author_add(self, author: str):
        try:
            self.ui.label_4.setText(author)
            self.ui.label_4.setStyleSheet("color: green;")
            logger.info(f"–ê–≤—Ç–æ—Ä –≤–∏–¥–µ–æ: {author}")
        except Exception:
            self.logging_of_information(text="–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–∞ –≤–∏–¥–µ–æ", true_false=False)

    # ___________________________ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ ___________________________
    @logger.catch()
    def finished_download_video(self):
        try:
            self.ui.comboBox.clear()
            self.ui.comboBox.setEnabled(False)
            self.ui.pushButton_3.setEnabled(False)

            self.ui.pushButton_2.setEnabled(False)

            self.ui.lineEdit.clear()
            self.ui.lineEdit.setEnabled(True)
            self.ui.pushButton.setEnabled(True)
        except Exception:
            logger.info(f"–û—à–∏–±–∫–∞ –≤ –±–ª–æ–∫–µ finished_download_video")
            logger.error(traceback.format_exc())

    # –•–ó —á–µ —ç—Ç–æ, —Å–∞–º–æ —Å–æ–±–æ–π –ø–æ—è–≤–∏–ª–æ—Å—å, –∫–æ–≥–¥–∞ —è –≤ –ª–µ–≤–æ–º –ø–æ—Ç–æ–∫–µ –æ–±—ä—è–≤–∏–ª –¥–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥
    @property
    def signal_stop_random(self):
        return self._signal_stop_random


if __name__ == '__main__':
    _app = QApplication(sys.argv)
    _app.setStyle("Fusion")
    _window = MainWindow()
    _window.show()
    sys.exit(_app.exec_())
